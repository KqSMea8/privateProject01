<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.service.proxy.MineProxy">
	<!-- ==============================================用户相关============================================================= -->
	<select id="getCenterInfo" resultType="java.util.Map">
		SELECT
			a.user_id userId,
			a.name userName,
			b.headimgurl headImgUrl,
			a.is_player isPlayer,
			a.is_referee isReferee,
			a.diamonds
		FROM
			USER a,
			user_wx b
		WHERE
			a.user_id = b.user_id
		AND a.user_id = #{userId}
	</select>
	
	<!-- ==============================================收货地址相关============================================================= -->
	
	<select id="receiveList" resultType="java.util.Map">
		SELECT
			user_receive_info_id receiveId,
			receive_user_name receiveName,
			receive_user_tel receiveMobile,
			receive_address address,
			is_def isDeff,
			CONCAT(IFNULL(province_name,''),IFNULL(city_name,''),IFNULL(district_name,''))allAddress
		FROM
			user_receive_info
		WHERE
			user_id = #{userId}
	</select>
	
	<insert id="createReceive">
		INSERT INTO user_receive_info (
			receive_user_name,
			receive_user_tel,
			receive_address,
			is_def,
			user_id,
			province_id,
			province_name,
			city_id,
			city_name,
			district_id,
			district_name
		)
		VALUES
			(
				#{receiveName},
				#{receiveMobile},
				#{address},
				#{isDeff},
				#{user.userId},
				#{provinceId},
				(SELECT province_name FROM region_province WHERE province_id = #{provinceId}),
				#{cityId},
				(SELECT city_name FROM region_city WHERE city_id = #{cityId}),
				#{districtId},
				(SELECT district_name FROM region_district WHERE district_id = #{districtId})
			)
	</insert>
	
	<update id="editReceive">
		UPDATE user_receive_info 
			receive_user_name = #{receiveName},
			receive_user_tel = #{receiveMobile},
			receive_address = #{address},
			is_def = #{isDeff},
			province_id = #{provinceId},
			province_name = (SELECT province_name FROM region_province WHERE province_id = #{provinceId}),
			city_id = #{cityId},
			city_name = (SELECT city_name FROM region_city WHERE city_id = #{cityId}),
			district_id = #{districtId},
			district_name = (SELECT district_name FROM region_district WHERE district_id = #{districtId})
		WHERE
			user_receive_info_id = #{receiveId}
	</update>
	
	<!-- ==============================================球队相关============================================================= -->
	
	<select id="teamList" resultType="java.util.Map">
		SELECT
			a.team_info_id teamId,
			a.team_name teamName,
			a.team_logo logoPath,
			CONCAT(IFNULL(a.city_name,''),IFNULL(a.district_name,'')) region
		FROM
			team_info a,
			team_member b
		WHERE
			a.team_info_id = b.team_info_id
		AND b.user_id = #{userId}
	</select>
	
	<insert id="createTeam">
		INSERT INTO footballnew.team_info (
			team_name,
			team_domain,
			team_logo,
			team_synopsis,
			linkman,
			mobile,
			color_jersey,
			color_nants,
			color_socks,
			establish,
			user_id,
			province_id,
			province_name,
			city_id,
			city_name,
			district_id,
			district_name
		)
		SELECT
			#{paramEntity.teamName},
			#{paramEntity.teamName},
			#{paramEntity.teamLogo},
			#{paramEntity.teamSynopsis},
			#{paramEntity.contacts},
			#{paramEntity.contactsTel},
			#{paramEntity.colorOfJersey},
			#{paramEntity.colorOfNants},
			#{paramEntity.colorOfSocks},
			#{paramEntity.establish},
			#{user.userId}
			x.province_id,
			x.province_name,
			x.city_id,
			x.city_name,
			y.district_id,
			y.district_name
		FROM
			(
				SELECT a.province_id, a.province_name, b.city_id, b.city_name
				FROM region_province a, region_city b
				WHERE a.province_id = b.province_id AND b.city_id = #{paramEntity.cityId}
			) x
			LEFT JOIN (
				SELECT district_id, district_name FROM region_district WHERE district_id = #{paramEntity.districtId}
			) y ON 1 = 1
	</insert>
	
	<update id="updateTeam">
		UPDATE 
			team_info a 
			LEFT JOIN (		
				SELECT * FROM (
					SELECT a.province_id, a.province_name, b.city_id, b.city_name
					FROM region_province a, region_city b
					WHERE a.province_id = b.province_id AND b.city_id = 109
				) x
				LEFT JOIN (
					SELECT district_id, district_name FROM region_district WHERE district_id = 1501
				) y ON 1 = 1
			) b ON 1 = 1
		SET 
			a.team_name = #{paramEntity.teamName},
			a.team_domain = #{paramEntity.teamName},
			a.team_logo = #{paramEntity.teamLogo},
			a.team_synopsis = #{paramEntity.teamSynopsis},
			a.linkman = #{paramEntity.contacts},
			a.mobile = #{paramEntity.contactsTel},
			a.color_jersey = #{paramEntity.colorOfJersey},
			a.color_nants = #{paramEntity.colorOfNants},
			a.color_socks = #{paramEntity.colorOfSocks},
			a.establish = #{paramEntity.establish},
			a.province_id = b.province_id,
			a.province_name = b.province_name,
			a.city_id = b.city_id,
			a.city_name = b.city_name,
			a.district_id = b.district_id,
			a.district_name = b.district_name
		WHERE 
			a.team_info_id = #{paramEntity.teamId}
	</update>
	
	<select id="teamInfo" resultType="java.util.Map">
		SELECT
			team_info_id teamId,
			pics,
			team_logo teamLogo,
			team_name teamName,
			establish,
			linkman contacts,
			mobile contactsTel,
			user_id userId
		FROM
			team_info
		WHERE
			team_info_id = #{teamId}
	</select>
	
	<select id="getTeamCount" resultType="java.util.Map">
		SELECT
			COUNT(1),
			IFNULL(SUM(show_num),0) totalGame,
			IFNULL(SUM(win_num),0) totalWin,
			IFNULL(SUM(lose_num),0) totalLose,
			IFNULL(SUM(draw_num),0) totalDraw
		FROM
			match_join_team
		WHERE
			team_info_id = #{teamId}
		AND status = 1
	</select>
	
	<select id="matchScheduleInfo" resultType="java.util.Map">
		SELECT
			a.schedule_start_time,
			b.team_info_id teamid,
			b.team_name teamName,
			b.team_logo teamLogo,
			(SELECT CONCAT(IFNULL( city_name,''),IFNULL(district_name,''),IFNULL(address,'')) FROM match_info WHERE match_info_id = a.match_info_id) address,
			0 signUpTotal,
			0 signUpStatus
		FROM
			match_schedule a,
			team_info b
		WHERE
			a.status = 1
		AND CASE 
				WHEN a.team_info_id1 = #{teamId} THEN a.team_info_id2 = b.team_info_id
				WHEN a.team_info_id2 = #{teamId} THEN a.team_info_id1 = b.team_info_id
			END
		AND (a.team_info_id1 = #{teamId} OR a.team_info_id2 = #{teamId})
		AND a.schedule_start_time > NOW()
		ORDER BY
			a.schedule_start_time
		LIMIT 1
	</select>
	
	<select id="teamInfoMore" resultType="java.util.Map">
		SELECT
			#{teamId} teamId,
			COUNT(a.match_join_team_info_id), 
			IFNULL(SUM(show_num),0) totalGame,
			IFNULL(SUM(win_num),0) totalWin,
			IFNULL(SUM(draw_num),0) totalDraw,
			IFNULL(SUM(lose_num),0) totalLose,
			0 peopleAverage,
			0 matchAverage
		FROM
			match_join_team a
		WHERE
			a.team_info_id = #{teamId}
		AND a.status = 1
		AND YEAR(a.create_time) = #{year}
	</select>
	
	<select id="matchScheduleList" resultType="java.util.Map">
		SELECT
			a.match_info_id matchInfoId,
			b.match_name matchName,
			b.logo_img logoPath,
			CONCAT(b.start_date,'~',b.end_date) time,
			IFNULL(SUM(win_num), 0) totalWin,
			IFNULL(SUM(draw_num), 0) totalDraw,
			IFNULL(SUM(lose_num), 0) totalLose,
			0 signUpTotal
		FROM
			match_join_team a,
			match_info b
		WHERE
			a.match_info_id = b.match_info_id
		AND a.team_info_id = #{teamId}
		AND a.status = 1
		AND YEAR(a.create_time) = #{year}
		GROUP BY
			a.match_info_id
	</select>
	
	<select id="applyUserList" resultType="java.util.Map">
		SELECT
			a.team_member_id teamMemberId,
			a.user_id userId,
			b.name userName,
			c.headimgurl headImgUrl
		FROM
			team_member a,
			user b,
			user_wx c
		WHERE
			a.user_id = b.user_id
		AND b.user_id = c.user_id
		AND a.audit_status = 1
		AND a.team_info_id = #{teamId}
		ORDER BY
			a.create_time
	</select>
	
	<select id="memberList" resultType="java.util.Map">
		SELECT
			a.team_member_id teamMemberId,
			a.user_id userId,
			b.name userName,
			c.headimgurl headImgUrl,
			b.mobile,
			CASE b.sex WHEN 0 THEN '保密' WHEN 1 THEN '女' WHEN 2 THEN '男' END sex,
			TIMESTAMPDIFF(YEAR, b.birthday, NOW()) age,
			a.job,
			a.position
		FROM
			team_member a,
			user b,
			user_wx c
		WHERE
			a.user_id = b.user_id
		AND b.user_id = c.user_id
		AND a.audit_status = 1
		AND a.team_info_id = #{teamId}
		ORDER BY
			<if test="order == null">a.create_time</if>
			<if test="order != null and order == 1">a.job #{sort}</if>
			<if test="order != null and order == 2">a.position #{sort}</if>
	</select>
	
	<select id="listEdplayers" resultType="java.util.Map">
		SELECT
			a.user_id,
			a.name,
			b.headimgurl,
			a.mobile,
			CASE a.sex WHEN 0 THEN '保密' WHEN 1 THEN '女' WHEN 2 THEN '男' END sex,
			TIMESTAMPDIFF(YEAR, a.birthday, NOW()) age,
			a.position
		FROM
			USER a,
			user_wx b
		WHERE
			a.user_id = b.user_id 
		AND a.user_id NOT IN (
				SELECT DISTINCT
					user_id
				FROM
					team_member
				WHERE
					team_info_id = #{teamId}
				AND audit_status IN (1, 0)
			)
		AND a.user_id != #{userId}
		AND a.is_gp = 1
	</select>
	
	<select id="teamMemberInfo" resultType="java.util.Map">
		SELECT
			a.team_member_id teamMemberId,
			b.name userName,
			c.headimgurl headImgUrl,
			b.mobile,
			0 totalIn,
			0 totalAttendance,
			0 totalNoAttendance,
			a.job,
			a.position
		FROM
			team_member a,
			user b,
			user_wx c
		WHERE
			a.user_id = b.user_id
		AND b.user_id = c.user_id
		AND a.audit_status = 1
		AND a.team_member_id = #{teamMemberId}
	</select>
	
	<update id="updateMemberStatus">
		UPDATE 
			team_member
		SET 
			audit_status = #{status},
		 	audit_time = NOW(),
		 	audit_user_id = #{userId}
		AND 
			team_member_id = #{teamMemberId}
	</update>
	
	<select id="teamAlbumList" resultType="java.util.Map">
		TODO
	</select>
	
	<select id="albumList" resultType="java.util.Map">
		TODO
	</select>
	
	<!-- ==============================================商品订单相关============================================================= -->
	
	<select id="orderList" resultType="java.util.Map">
		SELECT
			a.commodity_order_id orderId,
			a.order_number orderCode,
			b.commodity_title commodityName,
			b.commodity_cover_path commodityCoverPath,
			DATE_FORMAT(a.create_time,'%Y-%m-%d %T') createTime,
			a.one_price onePrice,
			a.total,
			a.order_price orderPrice,
			a.status orderStatus,
			CASE a.status WHEN 1 THEN '未支付' WHEN 2 THEN '未收货' WHEN 3 THEN '已完成' END orderStatusStr
		FROM
			commodity_order a,
			commodity_info b
		WHERE
			a.commodity_info_id = b.commodity_info_id
		AND a.user_id = #{userId}
		<if test="type != null ">
			a.status = #{type}
		</if>
	</select>
	
	<!-- ==============================================约战相关============================================================= -->
	<select id="pklist" resultType="java.util.Map">
		SELECT
			a.engagement_info_id pkInfoId,
			a.start_time pktime,
			a.engagement_title title,
			CONCAT(IFNULL(a.city_name,''),IFNULL(a.district_name,'')) region,
			a.address,
			a.cost_plan costContent,
			CASE WHEN NOW()> a.sign_up_end_time AND a.status = 0 THEN 2 ELSE a.status END pkStatus,
			CASE WHEN NOW()> a.sign_up_end_time AND a.status = 0 THEN '已过期' WHEN a.status = 0 THEN '待约战' ELSE '约战成功' END pkStatusStr,
			(SELECT title FROM class WHERE id = a.engagement_type) pkMarchType,
			a.team_id teamId,
			b.team_name teamName,
			b.team_logo logpPath,
			a.create_time teamTime
		FROM
			engagement_info a,
			team_info b
		WHERE
			a.team_id = b.team_info_id
		AND	a.user_id = #{userId}
	</select>
	
	<!-- ==============================================关注相关============================================================= -->
	
	<insert id="follow">
		INSERT INTO follow (
			follow_info_id,
			type,
			user_id
		)
		VALUES
			(
				#{followInfoId},
				#{type},
				#{userId}
			)
	</insert>
	
	<select id="followMatchlist" resultType="java.util.Map">
		SELECT
			b.match_info_id matchInfoId,
			b.match_name matchName,
			b.logo_img logoPath,
			CONCAT(IFNULL(b.city_name,''),'-',IFNULL(b.district_name,'')) region,
			(SELECT title FROM class WHERE id = b.match_type) pkMarchType,
			CONCAT(b.start_date,'~',b.end_date) matchTime,
			b.status,
			CASE b.status WHEN 1 THEN '报名中' WHEN 2 THEN '待开赛' WHEN 3 THEN '进行中' END statusStr
		FROM
			follow a,
			match_info b
		WHERE
			a.follow_info_id = b.match_info_id
		AND a.user_id = #{userId}
		AND a.type = 1
		AND a.status = 1
	</select>
	
	<select id="followTeamlist" resultType="java.util.Map">
		SELECT
			b.team_info_id teamId,
			b.team_name teamName,
			b.team_logo logoPath,
			CONCAT(IFNULL(b.city_name,''),'-',IFNULL(b.district_name,'')) region
		FROM
			follow a,
			team_info b
		WHERE
			a.follow_info_id = b.team_info_id
		AND a.user_id = #{userId}
		AND a.type = 2
		AND a.status = 1
	</select>
	
	<select id="followMemberlist" resultType="java.util.Map">
		SELECT
			b.team_member_id teamMemberId,
			b.user_id userId,
			c.name userName,
			d.headimgurl headImgUrl,
			c.mobile,
			CASE c.sex WHEN 0 THEN '保密' WHEN 1 THEN '女' WHEN 2 THEN '男' END sex,
			TIMESTAMPDIFF(YEAR, c.birthday, NOW()) age,
			b.job,
			b.position
		FROM
			follow a,
			team_member b,
			user c,
			user_wx d
		WHERE
			a.follow_info_id = b.team_member_id
		AND b.user_id = c.user_id
		AND c.user_id = d.user_id
		AND a.user_id = #{userId}
		AND a.type = 3
		AND a.status = 1
	</select>
</mapper>