<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.service.proxy.MatchProxy">
	
	<select id="matchlist" resultType="java.util.Map">
		SELECT
			a.match_info_id matchInfoId,
			a.match_name matchName,
			a.logo_img logoPath,
			CONCAT(IFNULL(a.city_name,''),'-',IFNULL(a.district_name,'')) region,
			(SELECT title FROM class WHERE id = a.match_type) matchType,
			CONCAT(a.start_date,'~',a.end_date) matchTime,
			a.status,
			CASE a.status WHEN 1 THEN '报名中' WHEN 2 THEN '待开赛' WHEN 3 THEN '进行中' WHEN 4 THEN '结束' END statusStr
		FROM
			match_info a
		WHERE
			a.del_flag = 1
		<if test="cityId != null">
			AND	a.city_id = #{cityId}
		</if>
		<if test="paramEntity.cityId != null">
			AND a.city_id = #{paramEntity.cityId}
		</if>
		<if test="paramEntity.districtId != null">
			AND a.district_id = #{paramEntity.districtId}
		</if>
		<if test="paramEntity.marchType != null">
			AND a.match_type = #{paramEntity.marchType}
		</if>
		<if test="paramEntity.status != null">
			AND a.status = #{paramEntity.status}
		</if>
		<if test='paramEntity.searchKey != null and paramEntity.searchKey !=""'>
			AND a.match_name LIKE CONCAT('%',#{paramEntity.searchKey},'%')
		</if>
		<if test='paramEntity.startDate != null and paramEntity.startDate != ""'>
			AND a.create_time &gt;= #{paramEntity.startDate}
		</if>
		<if test='paramEntity.endDate != null and paramEntity.endDate != ""'>
			AND a.create_time &lt;= #{paramEntity.endDate}
		</if>
		ORDER BY
			a.create_time DESC
	</select>

	<select id="matchinfo" resultType="java.util.Map">
		SELECT
			a.match_info_id matchInfoId,
			a.match_name matchName,
			a.logo_img logoPath,
			CONCAT(IFNULL(a.city_name,''),'-',IFNULL(a.district_name,'')) region,
			(SELECT title FROM class WHERE id = a.match_type) matchType,
			CONCAT(a.start_date,'~',a.end_date) matchTime,
			a.status,
			CASE a.status WHEN 1 THEN '报名中' WHEN 2 THEN '待开赛' WHEN 3 THEN '进行中' WHEN 4 THEN '结束' END statusStr,
			a.sign_up_content,
			a.regulations_content,
			EXISTS(SELECT follow_id FROM follow WHERE follow_info_id = a.match_info_id AND type = 1 and user_id = #{userId} AND status = 1)
		FROM
			match_info a
		WHERE
			a.del_flag = 1
		AND a.match_info_id = #{matchInfoId}
	</select>
	
	<select id="matchEndInfo" resultType="java.util.Map">
		SELECT
			b.team_info_id winTeamId,
			b.team_name winTeamName,
			b.team_logo winTeamLogo,
			a.win_num totalWin,
			a.draw_num totalDraw,
			a.lose_num totalLose,
			a.sponsor_ad sponsorAD
		FROM
			match_join_team a,
			team_info b
		WHERE
			a.team_info_id = b.team_info_id
		AND a.match_info_id = = #{matchInfoId}
		AND a.is_winer = 1
	</select>
	
	<select id="marchRuningInfo" resultType="java.util.Map">
		SELECT
			a.match_schedule_id scheduleId,
			IF(
				FIND_IN_SET(#{userId},a.referee_info),
				1,
				IF(
					FIND_IN_SET(#{userId},a.event_reality_info),
					2,
					IF(
						(
							SELECT
								count(b.team_member_id) > 0
							FROM
								team_member b
							WHERE
								(a.team_info_id1 = b.team_info_id OR a.team_info_id2 = b.team_info_id )
							AND a.match_schedule_id = a.match_schedule_id
							AND b.user_id = #{userId}
							AND role_type IN (1, 4)
						)
						,3,0
					)
				)
			) userRole,
			b.team_info_id teamidA,
			b.team_name teamNameA,
			b.team_logo teamLogoA,
			a.score1 scoreA,
			c.team_info_id teamidB,
			c.team_name teamNameB,
			c.team_logo teamLogoB,
			a.score2 scoreB,
			a.address,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.video_info)) memberOfVideo,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.referee_info)) memberOfReferee,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.event_reality_info)) memberOfEventReality,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.committee_info)) memberOfCommittee
		FROM 
			match_schedule a,
			team_info b,
			team_info c
		WHERE
			a.team_info_id1 = b.team_info_id
		AND a.team_info_id2 = c.team_info_id
		AND a.schedule_result is NULL
		AND a.schedule_start_time &lt; NOW()
		AND a.match_info_id = #{matchInfoId}
	</select>
	
	<select id="matchinfoImagelist" resultType="java.lang.String">
		SELECT
			a.file_path imagePath
		FROM
			match_schedule_file a
		WHERE
			a.file_type = 2
		AND a.match_info_id = #{matchInfoId}
		<if test="teamId != null">
			AND a.team_info_id = #{teamId}
		</if>
		<if test="teamMemberId != null">
			AND a.team_member_id = #{teamMemberId}
		</if>
	</select>
	
	<sql id="matchinfoVideoBaseSql">
		SELECT
			a.match_schedule_file_id videoId,
			a.file_title videoTitle,
			a.file_path videoPath,
			a.thumbnail_path thumbnailPath,
			DATE_FORMAT(a.create_time,'%Y-%m-%d %T') createTime,
			a.total_browse totalBrowse
		FROM
			match_schedule_file a
		WHERE
			a.file_type = 1
		AND a.match_info_id = #{matchInfoId}
	</sql>
	
	<select id="matchinfoVideolist" resultType="java.util.Map">
		<include refid="matchinfoVideoBaseSql"/>
		<if test="teamId != null">
			AND a.team_info_id = #{teamId}
		</if>
		<if test="teamMemberId != null">
			AND a.team_member_id = #{teamMemberId}
		</if>
	</select>
	
	<select id="matchinfoVideoInfo" resultType="java.util.Map">
		<include refid="matchinfoVideoBaseSql"/>
		AND a.match_schedule_file_id = #{videoId}
	</select>
	
	<select id="videoInfoCommentlist" resultType="java.util.Map">
		SELECT
			b.user_id userId,
			b.name userName,
			c.headimgurl headImgUrl,
			a.comment_content commentContent,
			DATE_FORMAT(a.create_time,'%Y-%m-%d %T') createTime
		FROM
			match_schedule_file_comment a,
			user b,
			user_wx c
		WHERE
			a.user_id = b.user_id
		AND b.user_id = c.user_id
		AND	a.match_schedule_file_id = #{videoId}
	</select>
	
	<insert id="videoInfoComment">
		INSERT INTO match_schedule_file_comment (
			match_info_id,
			match_schedule_id,
			match_schedule_file_id,
			comment_content,
			user_id
		)
		SELECT
			match_info_id,
			match_schedule_id,
			match_schedule_file_id,
			#{commentContent},
			#{userId}
		FROM
			match_schedule_file
		WHERE
			match_schedule_file_id = #{videoId}
	</insert>
	
	<select id="isHaveApply" resultType="java.lang.Boolean">
		SELECT
			COUNT(1)>0
		FROM 
			match_join_team
		WHERE 
			match_info_id = #{teamId}
		AND team_info_id = #{matchInfoId}
		AND status != 2
	</select>
	
	<insert id="matchApply">
		INSERT INTO match_join_team (
			match_info_id,
			team_info_id,
			contacts,
			contactsTel
		)
		VALUES
			(
				#{matchInfoId},
				#{teamId},
				#{contacts},
				#{contactsTel}
			)
	</insert>
	
	<!-- ==============================================播报相关================================================== -->
	
	<select id="getMemberList" resultType="java.util.Map">
		SELECT
			b.team_member_id teamMemberId,
			c.name teamMemberName,
			d.headimgurl headImgUrl
		FROM
			match_schedule a,
			match_join_user b,
			USER c,user_wx d
		WHERE
			a.match_info_id = b.match_info_id
		AND b.user_id = c.user_id
		AND c.user_id = d.user_id
		AND a.match_schedule_id = #{matchScheduleId}
		AND b.team_info_id = #{teamId}
		AND b.status = 0
		AND c.status = 1
	</select>
	
	<select id="setParamEntity" resultType="com.project.service.reqentity.match.AddEventrealityReqEntity">
		SELECT
			#{paramEntity.type} type,
			#{paramEntity.content} content,
			#{paramEntity.imgUrl} imgUrl,
			x.match_info_id matchInfoId,
			x.match_schedule_id scheduleId,
			IF(x.team_info_id1 = 1,x.formation1,x.formation2) formation,
			y.team_info_id teamInfoId,
			y.team_name teamInfoName,
			y.team_member_id teamMemberId,
			y.name teamMemberName,
			EXISTS(SELECT * FROM match_schedule_player_situation WHERE x.match_schedule_id = match_schedule_id AND team_member_id = #{paramEntity.replaceTeamMemberId}) isHaveInfo,
			#{paramEntity.replaceTeamMemberId} replaceTeamMemberId,
			(SELECT b.name FROM team_member a, user b WHERE a.user_id = b.user_id AND a.team_member_id = #{paramEntity.replaceTeamMemberId}) replaceTeamMemberName
		FROM
			match_schedule x,(
					SELECT
						b.team_info_id,
						d.team_name,
						b.team_member_id,
						c.name,
						a.match_schedule_id
					FROM
						match_schedule_player_situation a,
						team_member b,
						USER c,
						team_info d
					WHERE
						a.team_id = b.team_info_id
					AND b.team_info_id = d.team_info_id
					AND a.team_member_id = b.team_member_id
					AND b.user_id = c.user_id
					AND a.match_schedule_id = #{paramEntity.scheduleId}
					AND a.team_member_id = #{paramEntity.teamMemberId}
				) y
		WHERE
			x.match_schedule_id = #{paramEntity.scheduleId}
		AND x.match_schedule_id = y.match_schedule_id
	</select>
	
	<update id="updatePlayerSituation">
		UPDATE 
			match_schedule_player_situation
		SET 
			${fieldName} = ${fieldName} + 1
		WHERE
			match_info_id = #{paramEntity.matchInfoId}
		AND match_schedule_id = #{paramEntity.scheduleId}
		AND team_id = #{paramEntity.teamInfoId}
		AND team_member_id = #{paramEntity.teamMemberId}
	</update>
	
	<update id="replaceDown">
		UPDATE 
			match_schedule_player_situation
		SET 
			type = 2,
			down_time = NOW(),
			total_second = (IFNULL(total_second,0) + TIMESTAMPDIFF(MINUTE, up_time, NOW()))
		WHERE
			match_info_id = #{paramEntity.matchInfoId}
		AND match_schedule_id = #{paramEntity.scheduleId}
		AND team_id = #{paramEntity.teamInfoId}
		AND team_member_id = #{paramEntity.teamMemberId}
	</update>
	
	<update id="replaceUpUpdate">
		UPDATE 
			match_schedule_player_situation
		SET 
			type = 1,
			up_time = NOW()
		WHERE
			match_info_id = #{paramEntity.matchInfoId}
		AND match_schedule_id = #{paramEntity.scheduleId}
		AND team_id = #{paramEntity.teamInfoId}
		AND team_member_id = #{paramEntity.replaceTeamMemberId}
	</update>
	
	<insert id="replaceUpInsert">
		INSERT INTO match_schedule_player_situation (
			match_info_id,
			match_schedule_id,
			team_id,
			team_member_id,
			type,
			is_first,
			up_time,
			formation,
			user_id
		)
		VALUES		
			(
				#{paramEntity.matchInfoId},
				#{paramEntity.scheduleId},
				#{paramEntity.teamInfoId},
				#{paramEntity.replaceTeamMemberId},
				1,
				0,
				NOW(),
				#{paramEntity.formation},
				#{user.userId}
			)
	</insert>
	
	<insert id="addEventreality">
		INSERT INTO match_schedule_stage (
			match_schedule_id,
			stage_type,
			imgs,
			content,
			user_id
		)
		VALUES
			(
				#{paramEntity.scheduleId},
				#{paramEntity.type},
				#{paramEntity.imgUrl},
				#{paramEntity.content},
				#{user.userId}
			)
	</insert>
	
	<insert id="addFile">
		INSERT INTO match_schedule_file (
			match_info_id,
			match_schedule_id,
			team_info_id,
			team_member_id,
			file_type,
			file_path,
			operator_id
		)
		VALUES
			<foreach collection="list" item="itme" open="(" separator="," close=")">
				#{itme.matchInfoId},#{itme.scheduleId},#{itme.teamInfoId},#{itme.teamMemberId},2,#{itme.imgUrl},#{userId}
			</foreach>
	</insert>
	
	<select id="eventRealityList" resultType="java.util.Map">
		SELECT
			a.stage_type contentType,
			(SELECT title FROM class WHERE id = a.stage_type) contentTypeStr,
			a.content,
			a.imgs imgUrl,
			DATE_FORMAT(a.create_time,'%Y-%m-%d %T')
		FROM
			match_schedule_stage a
		WHERE a.match_schedule_id = #{matchScheduleId}
		ORDER BY
			create_time DESC
	</select>
	
	<!-- ==============================================赛事详情下半部分================================================== -->
	
	<select id="teamList" resultType="java.util.Map">
		SELECT
			b.team_info_id teamId,
			b.team_name teamName,
			b.team_logo logoPath,
			CONCAT(IFNULL(b.city_name,''),IFNULL(b.district_name,'')) region
		FROM
			match_join_team a,
			team_info b
		WHERE
			a.team_info_id = b.team_info_id
		AND a.status = 1
		AND b.status = 1
		AND a.match_info_id = #{matchInfoId}
	</select>
	
	<select id="scorelist" resultType="java.util.Map">
		SELECT
			b.team_info_id teamId,
			b.team_name teamName,
			b.team_logo logoPath,
			a.show_num totalGame,
			a.win_num totalWin,
			a.draw_num totalDraw,
			a.lose_num totalLose,
			CONCAT(a.goal_num,'/',a.lost_num) inAndOut,
			a.score score
		FROM
			match_join_team a,
			team_info b
		WHERE
			a.team_info_id = b.team_info_id
		AND a.status = 1
		AND b.status = 1
		AND a.match_info_id = #{matchInfoId}
		ORDER BY
			a.score DESC
	</select>
	
	<select id="scheduleList" resultType="java.util.Map">
		SELECT
			a.match_schedule_id scheduleId,
			b.team_info_id teamidA,
			b.team_name teamNameA,
			b.team_logo teamLogoA,
			IFNULL(a.score1, 0) scoreA,
			c.team_info_id teamidB,
			c.team_name teamNameB,
			c.team_logo teamLogoB,
			IFNULL(a.score2, 0) scoreB,
			DATE_FORMAT(a.schedule_start_time,'%Y-%m-%d %T') time,
			CASE WHEN NOW()> a.schedule_start_time AND a.status = 1 THEN 2 ELSE a.status END status 
		FROM
			match_schedule a,
			team_info b,
			team_info c
		WHERE
			a.team_info_id1 = b.team_info_id
		AND a.team_info_id2 = b.team_info_id
		AND a.status != 0
		AND b.status = 1
		AND c.status = 1
		AND a.match_schedule_id = #{matchInfoId}
	</select>
	
	<select id="memberList" resultType="java.util.Map">
		SELECT
			b.team_info_id teamId,
			b.team_name teamName,
			b.team_logo teamLogo,
			c.team_member_id teamMemberId,
			(SELECT name FROM user WHERE user_id = c.user_id) memberName,
			a.total_goal totalIn,
			a.total_red_card totalRed,
			a.total_yellow_card totalYellow,
			a.total_assistant_ngineer totalAssists
		FROM
			match_schedule_player_situation a,
			team_info b,
			team_member c
		WHERE
			a.team_id = b.team_info_id
		AND a.team_member_id = c.team_member_id
		AND b.status = 1
		AND c.audit_status = 1
		AND a.match_info_id = #{matchInfoId}
		ORDER BY
			<if test="type == 1">
				a.total_goal DESC
			</if>
			<if test="type == 2">
				a.total_red_card DESC,a.total_yellow_card DESC
			</if>
			<if test="type == 3">
				a.total_assistant_ngineer DESC
			</if>
	</select>
	
	<select id="memberInfo" resultType="java.util.Map">
		SELECT 
			a.team_member_id teamMemberId,
			(SELECT count(1)>1 FROM follow WHERE user_id = #{userId} AND type = 3 AND follow_info_id = a.user_id) isFollow,
			b.name userName,
			c.headimgurl headImgUrl,
			b.mobile,
			b.height,
			b.weight,
			CASE b.sex WHEN 0 THEN '保密' WHEN 1 THEN '女' WHEN 2 THEN '男' END sex,
			TIMESTAMPDIFF(YEAR, b.birthday, NOW()) age
		FROM
			team_member a,
			USER b,
			user_wx c
		WHERE 
			a.team_member_id = #{teamMemberId}
		AND a.user_id = b.user_id
		AND b.user_id = c.user_id 
		LIMIT 1
	</select>
	
	<select id="memberInfoCount" resultType="java.util.Map">
		SELECT
			COUNT(DISTINCT match_schedule_id),
			IFNULL(SUM(total_goal),0) totalIn,
			IFNULL(SUM(total_assistant_ngineer),0) totalAssistant
		FROM
			match_schedule_player_situation
		WHERE
			team_member_id = #{teamMemberId}
	</select>
	
	<select id="memberTeamList" resultType="java.util.Map">
		SELECT
			a.team_info_id teamId,
			a.team_name teamName,
			a.team_logo teamLogo
		FROM
			team_info a
		WHERE
			EXISTS (
				SELECT
					x.team_member_id
				FROM
					team_member x,
					team_member y
				WHERE
					a.team_info_id = x.team_info_id
				AND x.user_id = y.user_id
				AND x.audit_status = 1
				AND y.team_member_id = #{teamMemberId}
			)
	</select>
	
	<!-- ==============================================裁判设置阵型相关================================================== -->
	
	<select id="formationInfo" resultType="java.util.Map">
		SELECT
			a.match_schedule_id scheduleId,
			b.team_info_id teamidA,
			b.team_name teamNameA,
			b.team_logo teamLogoA,
			a.score1 scoreA,
			<if test="type == null">
				a.ersey_color1 colorOfJerseyA,
				a.nants_color1 colorOfNantsA,
				a.socks_color1 colorOfSocksA,
				a.formation1 formationA,
				a.ersey_color2 colorOfJerseyB,
				a.nants_color2 colorOfNantsB,
				a.socks_color2 colorOfSocksB,
				a.formation2 formationB,
			</if>
			<if test="type != null and type == 1">
				a.ersey_color1 colorOfJersey,
				a.nants_color1 colorOfNants,
				a.socks_color1 colorOfSocks,
				a.formation1 formation,
			</if>
			<if test="type != null and type == 2">
				a.ersey_color2 colorOfJersey,
				a.nants_color2 colorOfNants,
				a.socks_color2 colorOfSocks,
				a.formation2 formation,
			</if>
			c.team_info_id teamidB,
			c.team_name teamNameB,
			c.team_logo teamLogoB,
			a.score2 scoreB,
			a.address,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.video_info)) memberOfVideo,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.referee_info)) memberOfReferee,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.event_reality_info)) memberOfEventReality,
			(SELECT GROUP_CONCAT(name) FROM user WHERE FIND_IN_SET(user_id, a.committee_info)) memberOfCommittee
		FROM 
			match_schedule a,
			team_info b,
			team_info c
		WHERE
			a.team_info_id1 = b.team_info_id
		AND a.team_info_id2 = c.team_info_id
		AND a.match_schedule_id = #{scheduleId}
	</select>
	
	<select id="firstMemberList" resultType="java.util.Map">
		SELECT
			e.team_member_id teamMemberId,
			c.name memberName,
			d.headimgurl headImgUrl
		FROM
			match_schedule a,
			match_schedule_player_situation b,
			USER c,
			user_wx d,
			team_member e
		WHERE
			a.match_schedule_id = b.match_schedule_id
		<if test="type == 1">
			AND a.team_info_id1 = b.team_member_id
		</if>
		<if test="type == 2">
			AND a.team_info_id2 = b.team_member_id
		</if>
		AND b.team_member_id = e.team_member_id
		AND e.user_id = c.user_id
		AND c.user_id = d.user_id
		AND b.type != 2
		AND a.match_schedule_id = #{scheduleId}
	</select>
	
	<select id="substitutesMemberList" resultType="java.util.Map">
		SELECT
			e.team_member_id teamMemberId,
			c.name memberName,
			d.headimgurl headImgUrl
		FROM
			match_schedule a,
			match_join_user b,
			USER c,
			user_wx d,
			team_member e
		WHERE
			a.match_info_id = b.match_info_id
		<if test="type == 1">
			AND a.team_info_id1 = b.team_member_id
		</if>
		<if test="type == 2">
			AND a.team_info_id2 = b.team_member_id
		</if>
		AND b.team_member_id = e.team_member_id
		AND e.user_id = c.user_id
		AND c.user_id = d.user_id
		AND b.team_member_id NOT IN (
			SELECT
				team_member_id
			FROM
				match_schedule_player_situation
			WHERE
				match_schedule_id = a.match_schedule_id
			AND type != 2
			<if test="type == 1">
				AND team_info_id1 = a.team_info_id1
			</if>
			<if test="type == 2">
				AND team_info_id1 = a.team_info_id2
			</if>
		)
		AND a.match_schedule_id = #{scheduleId}
	</select>
	
	<update id="saveFormation">
		UPDATE 
			match_schedule
		SET 
		 	formation1 = #{paramEntity.formationA},
		 	ersey_color1 = #{paramEntity.colorOfJerseyA},
		 	nants_color1 = #{paramEntity.colorOfNantsA},
		 	socks_color1 = #{paramEntity.colorOfSocksA},
		 	formation2 = #{paramEntity.formationB},
		 	ersey_color2 = #{paramEntity.colorOfJerseyB},
		 	nants_color2 = #{paramEntity.colorOfNantsB},
		 	socks_color2 = #{paramEntity.colorOfSocksB},
		WHERE
			match_schedule_id = #{paramEntity.scheduleId}
	</update>
	
	<update id="deleteFirstMemberList">
		UPDATE 
			match_schedule a,match_schedule_player_situation b
		SET 
			b.status = 0
		WHERE
			<if test="type == 1">
				a.team_info_id1 = b.team_id
			</if>
			<if test="type == 2">
				a.team_info_id2 = b.team_id
			</if>
		AND a.match_schedule_id = b.match_schedule_id
		AND a.match_schedule_id = #{paramEntity.scheduleId}
	</update>
	
	<insert id="saveFirstMemberList">
		INSERT match_schedule_player_situation (
			match_info_id,
			match_schedule_id,
			team_id,
			team_member_id,
			up_time,
			formation,
			user_id
		) SELECT
			a.match_info_id,
			a.match_schedule_id,
			b.team_info_id,
			b.team_member_id,
			NOW(),
			#{formation},
			#{userId}
		FROM
			match_schedule a,
			team_member b
		WHERE
			<if test="type == 1">
				a.team_info_id1 = b.team_info_id
			</if>
			<if test="type == 2">
				a.team_info_id2 = b.team_info_id
			</if>
		AND a.match_schedule_id = #{scheduleId}
		AND b.team_member_id IN (${firstMemberStr})
	</insert>
	
	<select id="getType" resultType="java.lang.Integer">
		SELECT
			IF(count(b.team_member_id) > 0,1,2)
		FROM
			match_schedule a,
			team_member b
		WHERE
			a.team_info_id1 = b.team_info_id
		AND a.match_schedule_id = #{scheduleId}
		AND b.user_id = #{userId}
		AND role_type IN (1, 4)
	</select>
	
	<update id="saveFormationLeader">
		UPDATE 
			match_schedule
		SET 
			<if test="type == 1">
			 	formation1 = #{paramEntity.formation},
			 	ersey_color1 = #{paramEntity.colorOfJersey},
			 	nants_color1 = #{paramEntity.colorOfNants},
			 	socks_color1 = #{paramEntity.colorOfSocks},
		 	</if>
			<if test="type == 1">
			 	formation2 = #{paramEntity.formation},
			 	ersey_color2 = #{paramEntity.colorOfJersey},
			 	nants_color2 = #{paramEntity.colorOfNants},
			 	socks_color2 = #{paramEntity.colorOfSocks},
		 	</if>
		WHERE
			match_schedule_id = #{paramEntity.scheduleId}
	</update>
</mapper>